--- 
import Interfaz from "../components/interfaz.astro"
--- 

<Interfaz />

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CRUD de Faldas</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .crud-container {
            margin-top: 20px;
            padding: 20px;
        }
        @media (max-width: 768px) {
            .crud-container {
                margin-left: 0;
                margin-top: 0;
            }
        }
    </style>
</head>
<body>
    <div class="container crud-container">
        <h1 class="text-center mb-4">CRUD de Faldas</h1>

        <div class="d-flex justify-content-start mb-3">
            <button class="btn btn-success me-2" data-bs-toggle="modal" data-bs-target="#modalProducto" onclick="prepararFormulario()">Agregar Producto</button>
            <input type="text" class="form-control w-50" id="buscarProducto" placeholder="Buscar producto..." oninput="buscarProducto()">
        </div>

        <div class="table-responsive">
            <table class="table table-bordered table-striped text-center">
                <thead class="table-dark">
                    <tr>
                        <th>ID</th>
                        <th>Nombre</th>
                        <th>Descripción</th>
                        <th>Precio</th>
                        <th>Stock</th>
                        <th>Imagen 1</th>
                        <th>Imagen 2</th>
                        <th>Imagen 3</th>
                        <th>Imagen 4</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody id="tablaProductos">
                    <!-- Aquí se cargarán los productos -->
                </tbody>
            </table>
        </div>
    </div>

    <!-- Modal con formulario -->
    <div class="modal fade" id="modalProducto" tabindex="-1" aria-labelledby="modalProductoLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalProductoLabel">Agregar Producto</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="formProducto">
                        <input type="hidden" id="productoId">
                        <div class="mb-3">
                            <label for="nombre" class="form-label">Nombre del Producto</label>
                            <input type="text" class="form-control" id="nombre" required>
                        </div>
                        <div class="mb-3">
                            <label for="descripcion" class="form-label">Descripción del Producto</label>
                            <textarea class="form-control" id="descripcion" required></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="precio" class="form-label">Precio</label>
                            <input type="number" class="form-control" id="precio" required>
                        </div>
                        <div class="mb-3">
                            <label for="stock" class="form-label">Stock</label>
                            <input type="number" class="form-control" id="stock" required>
                        </div>
                        <div class="mb-3">
                            <label for="imagen1" class="form-label">Imagen 1</label>
                            <input type="text" class="form-control" id="imagen1" placeholder="URL de la imagen" required>
                        </div>
                        <div class="mb-3">
                            <label for="imagen2" class="form-label">Imagen 2</label>
                            <input type="text" class="form-control" id="imagen2" placeholder="URL de la imagen">
                        </div>
                        <div class="mb-3">
                            <label for="imagen3" class="form-label">Imagen 3</label>
                            <input type="text" class="form-control" id="imagen3" placeholder="URL de la imagen">
                        </div>
                        <div class="mb-3">
                            <label for="imagen4" class="form-label">Imagen 4</label>
                            <input type="text" class="form-control" id="imagen4" placeholder="URL de la imagen">
                        </div>
                        <button type="submit" class="btn btn-primary">Guardar Producto</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script type="module">
        document.addEventListener("DOMContentLoaded", () => {
            cargarProductos();

            // Manejar el evento submit del formulario
            document.getElementById("formProducto").addEventListener("submit", async (event) => {
                event.preventDefault();
                const productoId = document.getElementById('productoId').value;
                if (productoId) {
                    await editarProducto(productoId);
                } else {
                    await agregarProducto();
                }
            });
        });

        // Función para agregar un producto
        async function agregarProducto() {
            const nuevoProducto = obtenerDatosProducto();

            try {
                const response = await fetch('http://localhost:3000/api/productos', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(nuevoProducto)
                });

                if (response.ok) {
                    alert('Producto agregado exitosamente');
                    cargarProductos();
                    prepararFormulario();
                    const modal = bootstrap.Modal.getInstance(document.getElementById('modalProducto'));
                    modal.hide();
                } else {
                    alert('Hubo un error al agregar el producto');
                }
            } catch (error) {
                console.error('Error al agregar el producto:', error);
                alert('Error de conexión');
            }
        }

        // Función para editar un producto
        async function editarProducto(id) {
            const productoEditado = obtenerDatosProducto();

            try {
                const response = await fetch(`http://localhost:3000/api/productos/${id}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(productoEditado)
                });

                if (response.ok) {
                    alert('Producto editado exitosamente');
                    cargarProductos();
                    prepararFormulario();
                    const modal = bootstrap.Modal.getInstance(document.getElementById('modalProducto'));
                    modal.hide();
                } else {
                    alert('Hubo un error al editar el producto');
                }
            } catch (error) {
                console.error('Error al editar el producto:', error);
                alert('Error de conexión');
            }
        }

        // Función para cargar los productos existentes
        async function cargarProductos() {
            try {
                const response = await fetch('http://localhost:3000/api/productos');
                const productos = await response.json();
                const tablaProductos = document.getElementById('tablaProductos');
                tablaProductos.innerHTML = '';

                productos.forEach(producto => {
                    const fila = `
                        <tr>
                            <td>${producto.id}</td>
                            <td>${producto.nombre}</td>
                            <td>${producto.descripcion}</td>
                            <td>${producto.precio}</td>
                            <td>${producto.stock}</td>
                            <td><img src="${producto.imagen1}" width="50"></td>
                            <td><img src="${producto.imagen2}" width="50"></td>
                            <td><img src="${producto.imagen3}" width="50"></td>
                            <td><img src="${producto.imagen4}" width="50"></td>
                            <td>
                                <button class="btn btn-warning btn-sm" onclick="cargarProducto(${producto.id})">Editar</button>
                                <button class="btn btn-danger btn-sm" onclick="eliminarProducto(${producto.id})">Eliminar</button>
                            </td>
                        </tr>
                    `;
                    tablaProductos.innerHTML += fila;
                });
            } catch (error) {
                console.error('Error al cargar los productos:', error);
            }
        }

        // Función para eliminar un producto
        async function eliminarProducto(id) {
            if (confirm('¿Estás seguro de eliminar este producto?')) {
                try {
                    const response = await fetch(`http://localhost:3000/api/productos/${id}`, {
                        method: 'DELETE'
                    });

                    if (response.ok) {
                        alert('Producto eliminado exitosamente');
                        cargarProductos();
                    } else {
                        alert('Hubo un error al eliminar el producto');
                    }
                } catch (error) {
                    console.error('Error al eliminar el producto:', error);
                }
            }
        }

        // Función para obtener datos del formulario
        function obtenerDatosProducto() {
            return {
                nombre: document.getElementById('nombre').value,
                descripcion: document.getElementById('descripcion').value,
                precio: document.getElementById('precio').value,
                stock: document.getElementById('stock').value,
                imagen1: document.getElementById('imagen1').value,
                imagen2: document.getElementById('imagen2').value,
                imagen3: document.getElementById('imagen3').value,
                imagen4: document.getElementById('imagen4').value
            };
        }

        // Función para preparar el formulario para agregar un nuevo producto
        function prepararFormulario() {
            document.getElementById('productoId').value = '';
            document.getElementById('formProducto').reset();
            document.getElementById('modalProductoLabel').textContent = 'Agregar Producto';
        }

        // Función para cargar un producto en el formulario para editar
        async function cargarProducto(id) {
            try {
                const response = await fetch(`http://localhost:3000/api/productos/${id}`);
                const producto = await response.json();

                document.getElementById('productoId').value = producto.id;
                document.getElementById('nombre').value = producto.nombre;
                document.getElementById('descripcion').value = producto.descripcion;
                document.getElementById('precio').value = producto.precio;
                document.getElementById('stock').value = producto.stock;
                document.getElementById('imagen1').value = producto.imagen1;
                document.getElementById('imagen2').value = producto.imagen2;
                document.getElementById('imagen3').value = producto.imagen3;
                document.getElementById('imagen4').value = producto.imagen4;

                document.getElementById('modalProductoLabel').textContent = 'Editar Producto';
                const modal = new bootstrap.Modal(document.getElementById('modalProducto'));
                modal.show();
            } catch (error) {
                console.error('Error al cargar el producto:', error);
            }
        }
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
